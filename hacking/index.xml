<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hackings on ninjaduck</title>
    <link>http://www.ninjaducks.in/hacking/</link>
    <description>Recent content in Hackings on ninjaduck</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Dec 2015 13:35:54 +0530</lastBuildDate>
    
	<atom:link href="http://www.ninjaducks.in/hacking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Production and Development set-up for Angular 2 with TypeScript using Webpack and Gulp</title>
      <link>http://www.ninjaducks.in/hacking/angular-setup/</link>
      <pubDate>Tue, 22 Dec 2015 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/angular-setup/</guid>
      <description>Building modular, better structured web applications is now easier with Angular 2, but this comes with a new set of challenges on developing, packaging and deploying these applications. When developing in typescript, it has to be transpiled to javascript in a way such that its modules can be loaded by the browser. For debugging, source maps need to be enabled and for production, javascript needs to be minified. Along with this, the HTML and CSS of each individual component in the application should be present at the right place.</description>
    </item>
    
    <item>
      <title>Codelab - HTML5 Canvas and Game development</title>
      <link>http://www.ninjaducks.in/hacking/codelab/</link>
      <pubDate>Wed, 07 Oct 2015 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/codelab/</guid>
      <description>Objective This codelab will demonstrate how to build a game using HTML5 canvas. As an example, we will build a simple snake game.
We will walk you through the process of building the in a series of incremental steps. After each step you should have a working (not necessarily useful) version of the game. Each step is described in the form of a tag in the git repository.
Requirements The requirements for this codelab are:</description>
    </item>
    
    <item>
      <title>Writing Tests for Drush Commands</title>
      <link>http://www.ninjaducks.in/hacking/writing-tests-for-drush-commands/</link>
      <pubDate>Tue, 07 Jul 2015 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/writing-tests-for-drush-commands/</guid>
      <description>As a part of my GSoC project, I have been recently writing functional tests for site_audit &amp;ndash; a Drush extension that provides drush commands for static analysis of a Drupal site. The process seemed painful at first due to lack of good documentation and gaps in my knowledge of Drush and PHPUnit. But, after a few hiccups intially, I was successfully able to write tests for Site Audit.
Background Drush uses PHPUnit testing framework for testing its core commands.</description>
    </item>
    
    <item>
      <title>Setting Up PHP_CodeSniffer for Drupal 7 and 8</title>
      <link>http://www.ninjaducks.in/hacking/setting-up-php-codesniffer/</link>
      <pubDate>Thu, 25 Jun 2015 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/setting-up-php-codesniffer/</guid>
      <description>PHP CodeSniffer is a library which tokenises PHP, Javascript and CSS. Coder is a Drupal project that provides sniffs for PHP CodeSniffer which tell whether a piece of code follows Drupal coding standards.
My GSoC project requires me to work on both - Drupal 7 and 8 version of site_audit. So, I had to set up PHP_CodeSniffer such that it can work with both the versions of Drupal. The Coder standards are different for Drupal 7 and Drupal 8.</description>
    </item>
    
    <item>
      <title>Caching In Drupal 8</title>
      <link>http://www.ninjaducks.in/hacking/caching-in-drupal-8/</link>
      <pubDate>Wed, 24 Jun 2015 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/caching-in-drupal-8/</guid>
      <description>First week of my GSoC 2015 project required me to port the caching report of Site Audit to Drupal 8. To generate caching report, some checks are performed on the drupal website&amp;rsquo;s various cache settings. There have been some major changes in Drupal 8 caching architecture from Drupal 7. Most of them are fairly new with little documentation. This post contains a list of articles that helped me understand how caching works in Drupal 8.</description>
    </item>
    
    <item>
      <title>GSoC 2015 Extending Site Audit - Setting Up Dev Environment</title>
      <link>http://www.ninjaducks.in/hacking/drupal-dev-environment/</link>
      <pubDate>Wed, 24 Jun 2015 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/drupal-dev-environment/</guid>
      <description>I was selected for Google Summer Of Code 2015 program under Drupal. My project is to extend Site Audit under the mentorship of Jon Peck and my proposal for the project can be found here.
Weeks before the coding period started, the first challenge was to set up a developemnt environment such that both me and my mentor can test the work I do in a consistent way. Following are some of the things I did and learned in the process.</description>
    </item>
    
    <item>
      <title>Learning English with Cowsay</title>
      <link>http://www.ninjaducks.in/hacking/learning-english-with-cowsay/</link>
      <pubDate>Wed, 24 Dec 2014 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/learning-english-with-cowsay/</guid>
      <description>Linux has some absurd tools like fortune and cowsay. Fortune is a simple utility which displays random fortune cookies every time the user opens the terminal. Cowsay puts the message you give to it as an argument in a speech bubble with an ASCII image of a cow. You can combine cowsay and fortune to display a fortune cookie in the speech bubble of a cow. Nothing useful if you take them at face-value.</description>
    </item>
    
    <item>
      <title>Porting a module to Drupal 8</title>
      <link>http://www.ninjaducks.in/hacking/porting-a-module-to-drupal8/</link>
      <pubDate>Mon, 02 Jun 2014 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/porting-a-module-to-drupal8/</guid>
      <description>I am porting a drupal 7 module named securesite to drupal 8 under of Google Summer Of Code&#39;14. It has been two weeks into the coding period and I am thoroughly enjoying it. This is my first port in a series of posts that I plan to write during this period.
One look at a drupal 8 module is enough to make you realize that there have been some major changes in its architecture.</description>
    </item>
    
    <item>
      <title>A summer for Drupal</title>
      <link>http://www.ninjaducks.in/hacking/a-summer-for-drupal/</link>
      <pubDate>Tue, 22 Apr 2014 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/a-summer-for-drupal/</guid>
      <description>Today has been great for me in many ways. I reached the 1000 friends mark on fb, scored good in an exam. But the best thing that happened to me today is getting accepted into Google Summer Of Code&#39;14.
This is the first time I applied in this program and getting selected has been nothing less than pure bliss. I am exaggerating a little here but there is that feeling that lasts just for a few seconds.</description>
    </item>
    
    <item>
      <title>Gnome 3 to i3</title>
      <link>http://www.ninjaducks.in/hacking/gnome-3-to-i-3/</link>
      <pubDate>Mon, 27 Jan 2014 13:35:54 +0530</pubDate>
      
      <guid>http://www.ninjaducks.in/hacking/gnome-3-to-i-3/</guid>
      <description>I have been a linux user for more than two years now and the search for a perfect desktop environment is still on. I have tried many of the popular ones - Unity, Gnome 2 and 3, KDE, Cinnamon and MATE. Each of them have a different philosophy which is suitable for some type of users but all of them are either very heavy-weight or have a some very frustrating bugs.</description>
    </item>
    
  </channel>
</rss>